from aiogram import types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
import logging

from utils.keyboards import *
from utils.start_db import CustomDB
from utils.custom_states import *
from utils.config import *
from colorama import *
from loader import *

logging.basicConfig(level=logging.INFO)

@dp.message_handler(commands=['panel'])
async def panel(message:types.Message):
    #if message.from_user.id == admin_id:
        cursor = connect.cursor()
        cursor.execute(f"SELECT adminka FROM users WHERE id = {message.from_user.id};")
        adminka = cursor.fetchall()

        if adminka == 1:
            await message.answer("*–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –∫–∞–∫ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä 1 —É—Ä–æ–≤–Ω—è! üë§*", parse_mode='markdown', reply_markup=button2)

        elif adminka == 2:
            await message.answer("*–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –∫–∞–∫ –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫! üëë*", parse_mode='markdown', reply_markup=button2)
        
        else:
            await message.answer("*–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞! ‚ùå*", parse_mode='markdown')

    #else:
       # print(Fore.YELLOW, f"[Admin] –ù–µ—Ç—É –î–æ—Å—Ç—É–ø–∞ (/panel) - {message.from_user.full_name} ({message.from_user.id})")
        #await message.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ ‚ùå")