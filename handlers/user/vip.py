from utils.keyboards import *
from utils.start_db import CustomDB
from utils.custom_states import *
from utils.config import *
from colorama import *
from aiogram.dispatcher import FSMContext
from loader import *
from aiogram import types

logging.basicConfig(level=logging.INFO)

@dp.callback_query_handler(lambda call: call)
async def all(call):
    if call.data == "vip_1":
        await vip_1(call.message)
    elif call.data == "vip_2":
        await vip_2(call.message)
    elif call.data == "vip_3":
        await vip_3(call.message)

@dp.message_handler(commands=['vip'])
async def vip(message: types.Message):
    if message.chat.type == 'private':
        cursor = connect.cursor()
        cursor.execute(f"SELECT vip FROM users WHERE id = {message.from_user.id}")
        cursor.execute(f"SELECT vip_time FROM users WHERE id = {message.from_user.id}")
        vip = cursor.fetchall()
        vip_time = cursor.fetchall()

        if vip == 1:
            await message.reply(f'*–£ –≤–∞—Å VIP –ë—Ä–æ–Ω–∑–∞ ü•â*\n\n–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ {vip_time}', parse_mode='markdown')

        elif vip == 2:
            await message.reply(f'*–£ –≤–∞—Å VIP –°–µ—Ä–µ–±—Ä–æ ü•à*\n\n–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ {vip_time}', parse_mode='markdown')

        elif vip == 3:
            await message.reply(f'*–£ –≤–∞—Å VIP –ó–æ–ª–æ—Ç–æ ü•á*\n\n–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ {vip_time}', parse_mode='markdown')

        else:
            await message.reply(f'*–£ –≤–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç VIP ‚ùå*\n\n*–ß—Ç–æ –¥–∞–µ—Ç VIP? ü§î*\n- –ü—Ä–æ–ø–∞–¥–∞–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ 10 –≤–∏–¥–µ–æ –≤ –¥–µ–Ω—å\n\n*–ß—Ç–æ –±—ã –∫—É–ø–∏—Ç—å VIP-—Å—Ç–∞—Ç—É—Å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ!', parse_mode='markdown', reply_markup=vip_btn)


@dp.message_handler(commands=['vip_1'])
async def vip_1(message: types.Message):
    if message.chat.type == 'private':
        cursor = connect.cursor()
        cursor.execute(f"SELECT vip FROM users WHERE id = {message.from_user.id}")
        cursor.execute(f"SELECT vip_time FROM users WHERE id = {message.from_user.id}")
        vip = cursor.fetchall()
        vip_time = cursor.fetchall()
        if vip != 0:
            await message.answer(f"*–£ –≤–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å VIP {vip}*\n\n–ê–∫—Ç–∏–≤–µ–Ω –¥–æ {vip_time}", parse_mode='markdown')
        
        else:
            admin_btn = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä üë§", callback_data=f"")]
                ]
            )
            await message.answer(f"*–ß—Ç–æ –±—ã –∫—É–ø–∏—Ç—å VIP —Å—Ç–∞—Ç—É—Å, –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø–∏—Å–∞—Ç—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞:* @akbaraliev.110", parse_mode='markdown', reply_markup=admin_btn)

@dp.message_handler(commands=['vip_2'])
async def vip_2(message: types.Message):
    if message.chat.type == 'private':
        cursor = connect.cursor()
        cursor.execute(f"SELECT vip FROM users WHERE id = {message.from_user.id}")
        cursor.execute(f"SELECT vip_time FROM users WHERE id = {message.from_user.id}")
        vip = cursor.fetchall()
        vip_time = cursor.fetchall()
        if vip != 0:
            await message.answer(f"*–£ –≤–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å VIP {vip}*\n\n–ê–∫—Ç–∏–≤–µ–Ω –¥–æ {vip_time}", parse_mode='markdown')
        
        else:
            admin_btn = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä üë§", callback_data=f"")]
                ]
            )
            await message.answer(f"*–ß—Ç–æ –±—ã –∫—É–ø–∏—Ç—å VIP —Å—Ç–∞—Ç—É—Å, –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø–∏—Å–∞—Ç—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞:* @akbaraliev.110", parse_mode='markdown', reply_markup=admin_btn)

@dp.message_handler(commands=['vip_3'])
async def vip_3(message: types.Message):
    if message.chat.type == 'private':
        cursor = connect.cursor()
        cursor.execute(f"SELECT vip FROM users WHERE id = {message.from_user.id}")
        cursor.execute(f"SELECT vip_time FROM users WHERE id = {message.from_user.id}")
        vip = cursor.fetchall()
        vip_time = cursor.fetchall()
        if vip != 0:
            await message.answer(f"*–£ –≤–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å VIP {vip}*\n\n–ê–∫—Ç–∏–≤–µ–Ω –¥–æ {vip_time}", parse_mode='markdown')
        
        else:
            admin_btn = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä üë§", callback_data=f"")]
                ]
            )
            await message.answer(f"*–ß—Ç–æ –±—ã –∫—É–ø–∏—Ç—å VIP —Å—Ç–∞—Ç—É—Å, –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø–∏—Å–∞—Ç—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞:* @akbaraliev.110", parse_mode='markdown', reply_markup=admin_btn)

        
        