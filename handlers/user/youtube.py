from aiogram import types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from pytube import YouTube
import logging
import time
import os

from utils.keyboards import *
from utils.start_db import CustomDB
from utils.custom_states import *
from utils.config import *
from colorama import *
from tqdm import tqdm
from loader import *

logging.basicConfig(level=logging.INFO)

def url_valid(url):
    try:
        YouTube(url).streams.first()
        return True
    except:
        return False
    
@dp.callback_query_handler(lambda call: call)
async def all(call):
    if call.data == "audio":
        await audio(call.message)
    elif call.data == "video":
        await video(call.message)
    
@dp.message_handler(commands=['audio'])
async def audio(message:types.Message):
    await message.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∞—É–¥–∏–æ –∏ –æ–Ω–æ –±—É–¥–µ—Ç —Å–∫–∞—á–∞–Ω–æ. ‚úÖ")
    await DownloadAudio.downloadaud.set()

@dp.message_handler(state=DownloadAudio.downloadaud)
async def download_audio(message:types.Message, state:FSMContext):
    if url_valid(message.text) == True:
        print(Fore.GREEN, "[Download | Audio] –°–∫–∞—á–∏–≤–∞—é –∞—É–¥–∏–æ...")
        aud_yt = YouTube(message.text)
        await message.reply(f"*–°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ ‚¨áÔ∏è*\n\n*–ê–≤—Ç–æ—Ä:* {aud_yt.author} üë§\n*–ù–∞–∑–≤–∞–Ω–∏–µ:* {aud_yt.title}\n*–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:* {aud_yt.views} üëÅ", parse_mode='markdown')
        audio = aud_yt.streams.filter(only_audio=True).first().download('audio', f'{aud_yt.title}.mp3')
        try:
            print(Fore.GREEN, "[Send | Audio] –û—Ç–ø—Ä–∞–≤–ª—è—é –∞—É–¥–∏–æ...")
            await message.answer("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ... ‚¨ÜÔ∏è")
            with open(audio, 'rb') as down_audio:
                print(Fore.GREEN, "[Send | Audio] –ê—É–¥–∏–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
                await message.answer_audio(down_audio, caption="*ü§ñ –°–∫–∞—á–∞–Ω–æ @SpaceSaverBot*", parse_mode='markdown')
                os.remove(audio)
        except Exception as e:
            print(Fore.RED, f"[Error | Audio] –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
            await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏! ‚ùå")
            os.remove(audio)
    else:
            print(Fore.RED, "[Error | Audio] –°—Å—ã–ª–∫–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞, —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ.")
            await message.reply("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–∞–º–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ Youtube –≤–∏–¥–µ–æ. ‚ùå")
    await state.finish()

@dp.message_handler(commands=['video'])
async def video(message:types.Message):
    await message.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏ –æ–Ω–æ –±—É–¥–µ—Ç —Å–∫–∞—á–∞–Ω–æ.")
    await DownloadVideo.download.set()

@dp.message_handler(state=DownloadVideo.download)
async def download_video(message:types.Message, state:FSMContext):
    if url_valid( message.text) == True:
        print(Fore.GREEN, "[Download | Video] –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ...")
        yt = YouTube(message.text)
        await message.reply(f"*–°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ ‚¨áÔ∏è*\n\n*–ê–≤—Ç–æ—Ä:* {yt.author} üë§\n*–ù–∞–∑–≤–∞–Ω–∏–µ:* {yt.title}\n*–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:* {yt.views} üëÅ", parse_mode='markdown')
        video = yt.streams.filter(progressive=True, file_extension="mp4").order_by('resolution').desc().first().download('video', f"{yt.title}.mp4")
        try:
            print(Fore.GREEN, "[Send | Video] –û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ...")
            await message.answer("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ... ‚¨ÜÔ∏è")
            with open(video, 'rb') as down_video:
                print(Fore.GREEN, "[Send | Video] –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
                await message.answer_video(down_video, caption="*ü§ñ –°–∫–∞—á–∞–Ω–æ @SpaceSaverBot*", parse_mode='markdown')
                os.remove(video)
        except Exception as e:
            print(Fore.RED, f"[Error | Video] –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
            await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏! ‚ùå")
            os.remove(video)
    else:
        print(Fore.RED, "[Error | Video] –°—Å—ã–ª–∫–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞, —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ.")
        await message.reply("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–∞–º–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ Youtube –≤–∏–¥–µ–æ. ‚ùå")
    await state.finish()